// import React from "react";

// const Register = () => {
//   return (
//     <div className="min-h-screen flex items-center justify-center bg-gray-50 px-4">
//       <div className="bg-white shadow-lg rounded-2xl w-full max-w-md p-8">
//         {/* Header */}
//         <h2 className="text-2xl md:text-3xl font-bold text-center mb-2">
//           Create Your SparkLink Account
//         </h2>
//         <p className="text-gray-600 text-center mb-8">
//           Join our vibrant community of entrepreneurs and supporters.
//         </p>

//         {/* Form */}
//         <form className="space-y-5">
//           {/* Full Name */}
//           <div>
//             <label className="block text-sm font-medium text-gray-700 mb-1">
//               Full Name
//             </label>
//             <div className="relative">
//               <span className="absolute left-3 top-3 text-gray-400">
//                 <i className="fa-regular fa-user"></i>
//               </span>
//               <input
//                 type="text"
//                 placeholder="Enter your full name or display name"
//                 className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-3 focus:ring-2 focus:ring-orange-400 focus:outline-none"
//               />
//             </div>
//           </div>

//           {/* Email */}
//           <div>
//             <label className="block text-sm font-medium text-gray-700 mb-1">
//               Email Address
//             </label>
//             <div className="relative">
//               <span className="absolute left-3 top-3 text-gray-400">
//                 <i className="fa-regular fa-envelope"></i>
//               </span>
//               <input
//                 type="email"
//                 placeholder="your.email@example.com"
//                 className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-3 focus:ring-2 focus:ring-orange-400 focus:outline-none"
//               />
//             </div>
//           </div>

//           {/* Phone */}
//           <div>
//             <label className="block text-sm font-medium text-gray-700 mb-1">
//               Phone Number
//             </label>
//             <div className="flex gap-2">
//               <select className="border border-gray-300 rounded-lg py-2.5 px-2 w-1/3 focus:ring-2 focus:ring-orange-400 focus:outline-none text-sm">
//                 <option>+251 Ethiopia</option>
//                 <option>+1 USA</option>
//                 <option>+44 UK</option>
//               </select>
//               <div className="relative flex-1">
//                 <span className="absolute left-3 top-3 text-gray-400">
//                   <i className="fa-solid fa-phone"></i>
//                 </span>
//                 <input
//                   type="text"
//                   placeholder="912345678"
//                   className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-3 focus:ring-2 focus:ring-orange-400 focus:outline-none"
//                 />
//               </div>
//             </div>
//             <p className="text-xs text-gray-500 mt-1">
//               For SMS updates, verification, and payments.
//             </p>
//           </div>

//           {/* Password */}
//           <div>
//             <label className="block text-sm font-medium text-gray-700 mb-1">
//               Password
//             </label>
//             <div className="relative">
//               <span className="absolute left-3 top-3 text-gray-400">
//                 <i className="fa-solid fa-lock"></i>
//               </span>
//               <input
//                 type="password"
//                 placeholder="Create a strong password"
//                 className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-10 focus:ring-2 focus:ring-orange-400 focus:outline-none"
//               />
//               <span className="absolute right-3 top-3 text-gray-400 cursor-pointer">
//                 <i className="fa-regular fa-eye"></i>
//               </span>
//             </div>
//           </div>

//           {/* Confirm Password */}
//           <div>
//             <label className="block text-sm font-medium text-gray-700 mb-1">
//               Confirm Password
//             </label>
//             <div className="relative">
//               <span className="absolute left-3 top-3 text-gray-400">
//                 <i className="fa-solid fa-lock"></i>
//               </span>
//               <input
//                 type="password"
//                 placeholder="Confirm your password"
//                 className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-3 focus:ring-2 focus:ring-orange-400 focus:outline-none"
//               />
//             </div>
//           </div>

//           {/* User Role */}
//           <div>
//             <label className="block text-sm font-medium text-gray-700 mb-1">
//               User Role
//             </label>
//             <select className="w-full border border-gray-300 rounded-lg py-2.5 px-3 focus:ring-2 focus:ring-orange-400 focus:outline-none">
//               <option>Select your role</option>
//               <option>Entrepreneur</option>
//               <option>Investor</option>
//               <option>Supporter</option>
//             </select>
//           </div>

//           <p className="text-xs text-gray-500 text-center">
//             By signing up, you agree to our{" "}
//             <a href="#" className="text-blue-600 hover:underline">
//               Terms
//             </a>{" "}
//             and{" "}
//             <a href="#" className="text-blue-600 hover:underline">
//               Privacy Policy
//             </a>
//             .
//           </p>

//           {/* Submit Button */}
//           <button
//             type="submit"
//             className="w-full bg-orange-400 hover:bg-orange-500 text-white font-medium py-2.5 rounded-lg transition-colors"
//           >
//             Sign Up
//           </button>

//           <div className="flex items-center gap-2">
//             <hr className="flex-1 border-gray-300" />
//             <span className="text-gray-400 text-sm">OR</span>
//             <hr className="flex-1 border-gray-300" />
//           </div>

//           {/* Google Signup */}
//           <button
//             type="button"
//             className="w-full border border-gray-300 text-gray-700 font-medium py-2.5 rounded-lg hover:bg-gray-100 transition-colors"
//           >
//             Sign Up with Google
//           </button>
//         </form>

//         {/* Footer */}
//         <p className="text-center text-xs text-gray-400 mt-8">
//           Made with ðŸ’œ by SparkLink
//         </p>
//       </div>
//     </div>
//   );
// };

// export default Register;



import React, { useState } from "react";
// 1. ðŸŸ¢ IMPORT useNavigate from react-router-dom
import { useNavigate } from "react-router-dom"; 
import {
Â  auth,
Â  db,
Â  createUserWithEmailAndPassword,
Â  doc,
Â  setDoc,
} from "../../utility/fierbase"; // Adjust the path to your firebase.js file

const Register = () => {
Â  // 2. ðŸŸ¢ INITIALIZE useNavigate hook
    const navigate = useNavigate();
    
Â  // 3. State for all form fields and potential error/loading state
Â  const [fullName, setFullName] = useState("");
Â  const [email, setEmail] = useState("");
Â  const [phoneNumber, setPhoneNumber] = useState("");
Â  const [password, setPassword] = useState("");
Â  const [confirmPassword, setConfirmPassword] = useState("");
Â  const [userRole, setUserRole] = useState("Select your role");
Â  const [error, setError] = useState(null);
Â  const [loading, setLoading] = useState(false);

Â  const handleRegister = async (e) => {
Â  Â  e.preventDefault();
Â  Â  setError(null);
Â  Â  setLoading(true);

Â  Â  // Basic Validation
Â  Â  if (password !== confirmPassword) {
Â  Â  Â  setError("Passwords do not match.");
Â  Â  Â  setLoading(false);
Â  Â  Â  return;
Â  Â  }
Â  Â  if (userRole === "Select your role") {
Â  Â  Â  Â  setError("Please select a valid user role.");
Â  Â  Â  Â  setLoading(false);
Â  Â  Â  Â  return;
Â  Â  }

Â  Â  try {
Â  Â  Â  // ðŸš€ Step 1: Create user in Firebase Authentication
Â  Â  Â  const userCredential = await createUserWithEmailAndPassword(
Â  Â  Â  Â  auth,
Â  Â  Â  Â  email,
Â  Â  Â  Â  password
Â  Â  Â  );
Â  Â  Â  const user = userCredential.user;

Â  Â  Â  // ðŸ’¾ Step 2: Store additional user data in Firestore
Â  Â  Â  // Use the Firebase Auth user.uid as the document ID for the 'users' collection
Â  Â  Â  await setDoc(doc(db, "users", user.uid), {
Â  Â  Â  Â  uid: user.uid,
Â  Â  Â  Â  fullName: fullName,
Â  Â  Â  Â  email: email, // Duplicate for easy querying, though user.email exists
Â  Â  Â  Â  phoneNumber: "+251" + phoneNumber, // Example of combining country code
Â  Â  Â  Â  userRole: userRole,
Â  Â  Â  Â  createdAt: new Date(),
Â  Â  Â  });

Â  Â  Â  // 4. ðŸŸ¢ Step 3: Conditional Navigation Logic
Â  Â  Â  console.log("Registration Successful! User UID:", user.uid);

Â  Â  Â  if (userRole === 'Supporter') {
Â  Â  Â  Â  // Redirect Supporters to the supporter-specific home page
Â  Â  Â  Â  navigate('/login'); 
Â  Â  Â  } else {
Â  Â  Â  Â  // Redirect all other roles (Entrepreneur, Investor) to the general home page
Â  Â  Â  Â  navigate('/login'); 
Â  Â  Â  }
      // NOTE: Ensure your route paths (e.g., '/home', '/supporter-home') are correct in your App.js/router setup.

Â  Â  } catch (err) {
Â  Â  Â  console.error("Firebase Registration Error:", err.message);
Â  Â  Â  // Display a user-friendly error
Â  Â  Â  if (err.code === 'auth/email-already-in-use') {
Â  Â  Â  Â  setError('This email address is already in use.');
Â  Â  Â  } else if (err.code === 'auth/weak-password') {
Â  Â  Â  Â  setError('Password should be at least 6 characters.');
Â  Â  Â  } else {
Â  Â  Â  Â  setError(err.message);
Â  Â  Â  }
Â  Â  } finally {
Â  Â  Â  setLoading(false);
Â  Â  }
Â  };

Â  return (
Â  Â  <div className="min-h-screen flex items-center justify-center bg-gray-50 px-4">
Â  Â  Â  <div className="bg-white shadow-lg rounded-2xl w-full max-w-md p-8">
Â  Â  Â  Â  {/* Header */}
Â  Â  Â  Â  <h2 className="text-2xl md:text-3xl font-bold text-center mb-2">
Â  Â  Â  Â  Â  Create Your SparkLink Account
Â  Â  Â  Â  </h2>
Â  Â  Â  Â  <p className="text-gray-600 text-center mb-8">
Â  Â  Â  Â  Â  Join our vibrant community of entrepreneurs and supporters.
Â  Â  Â  Â  </p>

Â  Â  Â  Â  {/* Error Display */}
Â  Â  Â  Â  {error && (
Â  Â  Â  Â  Â  Â  <p className="text-red-600 text-center mb-4 p-2 bg-red-100 rounded-lg border border-red-300">
Â  Â  Â  Â  Â  Â  Â  Â  {error}
Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  )}

Â  Â  Â  Â  {/* Form */}
Â  Â  Â  Â  <form className="space-y-5" onSubmit={handleRegister}>
Â  Â  Â  Â  Â  {/* Full Name */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Full Name
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <div className="relative">
Â  Â  Â  Â  Â  Â  Â  <span className="absolute left-3 top-3 text-gray-400">
Â  Â  Â  Â  Â  Â  Â  Â  <i className="fa-regular fa-user"></i>
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Enter your full name or display name"
Â  Â  Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-3 focus:ring-2 focus:ring-orange-400 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  Â  value={fullName}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setFullName(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Email (Update value and onChange) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Email Address
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <div className="relative">
Â  Â  Â  Â  Â  Â  Â  <span className="absolute left-3 top-3 text-gray-400">
Â  Â  Â  Â  Â  Â  Â  Â  <i className="fa-regular fa-envelope"></i>
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="email"
Â  Â  Â  Â  Â  Â  Â  Â  placeholder="your.email@example.com"
Â  Â  Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-3 focus:ring-2 focus:ring-orange-400 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  Â  value={email}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setEmail(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Phone (Update select and input) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Phone Number
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <div className="flex gap-2">
Â  Â  Â  Â  Â  Â  Â  <select className="border border-gray-300 rounded-lg py-2.5 px-2 w-1/3 focus:ring-2 focus:ring-orange-400 focus:outline-none text-sm">
Â  Â  Â  Â  Â  Â  Â  Â  <option value="+251">+251 Ethiopia</option>
Â  Â  Â  Â  Â  Â  Â  Â  <option value="+1">+1 USA</option>
Â  Â  Â  Â  Â  Â  Â  Â  <option value="+44">+44 UK</option>
Â  Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  Â  Â  <div className="relative flex-1">
Â  Â  Â  Â  Â  Â  Â  Â  <span className="absolute left-3 top-3 text-gray-400">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <i className="fa-solid fa-phone"></i>
Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="912345678"
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-3 focus:ring-2 focus:ring-orange-400 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={phoneNumber}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setPhoneNumber(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <p className="text-xs text-gray-500 mt-1">
Â  Â  Â  Â  Â  Â  Â  For SMS updates, verification, and payments.
Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Password (Update value and onChange) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Password
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <div className="relative">
Â  Â  Â  Â  Â  Â  Â  <span className="absolute left-3 top-3 text-gray-400">
Â  Â  Â  Â  Â  Â  Â  Â  <i className="fa-solid fa-lock"></i>
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="password"
Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Create a strong password"
Â  Â  Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-10 focus:ring-2 focus:ring-orange-400 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  Â  value={password}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setPassword(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  minLength={6}
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  <span className="absolute right-3 top-3 text-gray-400 cursor-pointer">
Â  Â  Â  Â  Â  Â  Â  Â  <i className="fa-regular fa-eye"></i>
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Confirm Password (Update value and onChange) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Confirm Password
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <div className="relative">
Â  Â  Â  Â  Â  Â  Â  <span className="absolute left-3 top-3 text-gray-400">
Â  Â  Â  Â  Â  Â  Â  Â  <i className="fa-solid fa-lock"></i>
Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="password"
Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Confirm your password"
Â  Â  Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg py-2.5 pl-10 pr-3 focus:ring-2 focus:ring-orange-400 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  Â  value={confirmPassword}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setConfirmPassword(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* User Role (Update value and onChange) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  User Role
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <select 
Â  Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg py-2.5 px-3 focus:ring-2 focus:ring-orange-400 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  value={userRole}
Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setUserRole(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <option value="Select your role" disabled>Select your role</option>
Â  Â  Â  Â  Â  Â  Â  <option value="Entrepreneur">Entrepreneur</option>
Â  Â  Â  Â  Â  Â  Â  <option value="Investor">Investor</option>
Â  Â  Â  Â  Â  Â  Â  <option value="Supporter">Supporter</option>
Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  <p className="text-xs text-gray-500 text-center">
Â  Â  Â  Â  Â  Â  By signing up, you agree to our{" "}
Â  Â  Â  Â  Â  Â  <a href="#" className="text-blue-600 hover:underline">
Â  Â  Â  Â  Â  Â  Â  Terms
Â  Â  Â  Â  Â  Â  </a>{" "}
Â  Â  Â  Â  Â  Â  and{" "}
Â  Â  Â  Â  Â  Â  <a href="#" className="text-blue-600 hover:underline">
Â  Â  Â  Â  Â  Â  Â  Privacy Policy
Â  Â  Â  Â  Â  Â  </a>
Â  Â  Â  Â  Â  Â  .
Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  {/* Submit Button */}
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  className="w-full bg-orange-400 hover:bg-orange-500 text-white font-medium py-2.5 rounded-lg transition-colors disabled:opacity-50"
Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {loading ? 'Signing Up...' : 'Sign Up'}
Â  Â  Â  Â  Â  </button>

Â  Â  Â  Â  Â  <div className="flex items-center gap-2">
Â  Â  Â  Â  Â  Â  <hr className="flex-1 border-gray-300" />
Â  Â  Â  Â  Â  Â  <span className="text-gray-400 text-sm">OR</span>
Â  Â  Â  Â  Â  Â  <hr className="flex-1 border-gray-300" />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Google Signup (Requires separate implementation) */}
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 text-gray-700 font-medium py-2.5 rounded-lg hover:bg-gray-100 transition-colors"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Sign Up with Google
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </form>

Â  Â  Â  Â  {/* Footer */}
Â  Â  Â  Â  <p className="text-center text-xs text-gray-400 mt-8">
Â  Â  Â  Â  Â  Made with ðŸ’œ by SparkLink
Â  Â  Â  Â  </p>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default Register;
